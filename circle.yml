dependencies:
  override:
    # chmod to address a Circle "bug", since gcloud lives at /opt
    # and wants to make a .staging directory (as a sibling!)
    # when upgrading or installing new components.
    # - sudo chmod o+w /opt
    # CircleCI's version of pip can be out of date; make sure it's up-to-date first.
    - pip install --upgrade pip
    # Then install requirements needed to run our tools.
    - cd ~/curation/data_steward/ && pip install -t lib/ -r requirements.txt 
   
machine:
  environment:
    GOOGLE_APPLICATION_CREDENTIALS: "/home/ubuntu/gcloud-credentials-key.json"
    APPLICATION_ID: "all-of-us-ehr-dev"
    BIGQUERY_DATASET_ID: "circle_test_merge_rerun"
    BUCKET_NAME_FAKE: "circle-dummy-fake"
    DRC_BUCKET_NAME: "circle-dummy-drc-spec"
    BUCKET_NAME_NYC: "circle-dummy-nyc"
    BUCKET_NAME_CHCI: "circle-dummy-chci"
    BUCKET_NAME_CHS: "circle-dummy-chs"
    BUCKET_NAME_CPMC_CEDERS: "circle-dummy-cpmc_ceders"
    BUCKET_NAME_CPMC_UC: "circle-dummy-cpmc_uc"
    BUCKET_NAME_CPMC_USC: "circle-dummy-cpmc_usc"
    BUCKET_NAME_NYC_CU: "circle-dummy-nyc_cu"
    BUCKET_NAME_NYC_CORNELL: "circle-dummy-nyc_cornell"
    BUCKET_NAME_NYC_HH: "circle-dummy-nyc_hh"
    BUCKET_NAME_ECCHC: "circle-dummy-ecchc"
    BUCKET_NAME_GHS: "circle-dummy-ghs"
    BUCKET_NAME_HRHC: "circle-dummy-hrhc"
    BUCKET_NAME_IPMC_NU: "circle-dummy-ipmc_nu"
    BUCKET_NAME_IPMC_UCHICAGO: "circle-dummy-ipmc_uchicago"
    BUCKET_NAME_IPMC_NORTHSHORE: "circle-dummy-ipmc_northshore"
    BUCKET_NAME_IPMC_RUSH: "circle-dummy-ipmc_rush"
    BUCKET_NAME_IPMC_UIC: "circle-dummy-ipmc_uic"
    BUCKET_NAME_JHCHC: "circle-dummy-jhchc"
    BUCKET_NAME_NEC_BMC: "circle-dummy-nec_bmc"
    BUCKET_NAME_NEC_PHS: "circle-dummy-nec_phs"
    BUCKET_NAME_PITT: "circle-dummy-pitt"
    BUCKET_NAME_SYHC: "circle-dummy-syhc"
    BUCKET_NAME_TACH_HFHS: "circle-dummy-tach_hfhs"
    BUCKET_NAME_UAMC_BANNER: "circle-dummy-uamc_banner"
    BUCKET_NAME_UAMC_UOFA: "circle-dummy-uamc_uofa"
    BUCKET_NAME_VA: "circle-dummy-va"
    BUCKET_NAME_AOUW_MCRI: "circle-dummy-aouw_mcri"
    BUCKET_NAME_AOUW_UWH: "circle-dummy-aouw_uwh"
    BUCKET_NAME_AOUW_MCW: "circle-dummy-aouw_mcw"
    BUCKET_NAME_SEEC_UFL: "circle-dummy-seec_ufl"
    BUCKET_NAME_SAOU_UAB: "circle-dummy-saou_uab"
    BUCKET_NAME_SAOU_UAB_HUNT: "circle-dummy-saou_uab_hunt"
    BUCKET_NAME_SAOU_CGMHS: "circle-dummy-saou_cgmhs"
    BUCKET_NAME_SAOU_USAHS: "circle-dummy-saou_usahs"
    BUCKET_NAME_SAOU_UMC: "circle-dummy-saou_umc"
    BUCKET_NAME_SAOU_TUL: "circle-dummy-saou_tul"
    BUCKET_NAME_SAOU_LSU: "circle-dummy-saou_lsu"
    BUCKET_NAME_SAOU_UMMC: "circle-dummy-saou_ummc"
    PYTHONPATH: "/usr/lib/google-cloud-sdk/platform/google_appengine/:~/curation/data_steward:~/curation/data_steward/lib"

  post:
    - echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
    - sudo apt-get update && sudo apt-get install google-cloud-sdk
    - sudo apt-get install google-cloud-sdk-app-engine-python
    - chmod 700 ./curation/data_steward/ci/activate_creds.sh
    - ./curation/data_steward/ci/activate_creds.sh ~/gcloud-credentials-key.json

test:
  override:
    - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r spec_test.py
    - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r bq_utils_test.py
    - cd ~/curation/data_steward && ./test/run_tests.sh -g /usr/lib/google-cloud-sdk/platform/google_appengine/ -r validation_test.py

#deployment:
#  # Deploy master to the pmi-drc-api-test project whenever the tests pass
#  test:
#    branch: master
#    commands:
#      - ./ci/activate_creds.sh ~/gcloud-credentials.key
#      - ./tools/upgrade_database.sh -i https://pmi-drc-api-test.appspot.com --creds_file ~/gcloud-credentials.key:
#          pwd:
#            rest-api
#      - ./ci/deploy.sh pmi-drc-api-test config/config_test.json ~/gcloud-credentials.key
#      - ./rest-api/test/test_server.sh -i https://pmi-drc-api-test.appspot.com -c ~/gcloud-credentials.key
#
#  # To deploy to staging, cut a GitHub release on a green build, with tag of
#  # the form v0-1-1-rc0. We use tags as AppEngine version names, so they must
#  # follow AE rules (no dots).
#  staging:
#    # This should match _RELEASE_TAG_RE in release_notes.py.
#    tag: /v[0-9]+(-[0-9]+)*-rc[0-9]+[a-z]*/
#    commands:
#      - ./ci/activate_creds.sh ~/gcloud-credentials.key
#      - ./ci/release_notes.py all-of-us-rdr-staging
#      - ./tools/upgrade_database.sh -i https://all-of-us-rdr-staging.appspot.com --creds_file ~/gcloud-credentials.key:
#          pwd:
#            rest-api
#      - ./ci/deploy.sh all-of-us-rdr-staging config/config_staging.json ~/gcloud-credentials.key
#      - ./rest-api/test/test_server.sh -i https://all-of-us-rdr-staging.appspot.com -c ~/gcloud-credentials.key
#
## Stable and production deployments are not done automatically but can be
## manually executed with the test.sh and deploy.sh pair, e.g.:
## ./ci/deploy.sh all-of-us-rdr-stable config/config_stable.json <configurator key file>
## ./ci/deploy.sh all-of-us-rdr config/config_prod.json <configurator key file>
